stages:
  load_data:
    cmd: python src/load_data.py --config=params.yaml
    deps:
    - src/get_data.py
    - src/load_data.py
    - data_given/fashion-mnist_train.csv
    - data_given/fashion-mnist_test.csv
    outs:
    - data/raw/fashion-mnist_train.csv
    - data/raw/fashion-mnist_train.csv

  split_data:
    cmd: python src/split_data.py --config=params.yaml
    deps:
    - src/split_data.py
    - data/raw/fashion-mnist_train.csv
    - data/raw/fashion-mnist_train.csv
    outs:
    - data/processed/fashion-mnist_train.csv
    - data/processed/fashion-mnist_test.csv
  train_and_evaluate:
    cmd: python src/train_and_evaluate.py --config=params.yaml
    deps:
    - data/processed/fashion-mnist_train.csv
    - data/processed/fashion-mnist_test.csv
    - src/train_and_evaluate.py
    params:
    - estimators.CnnNetwork.params.loss
    - estimators.CnnNetwork.params.optimiser
    - estimators.CnnNetwork.params.metrics
    - estimators.CnnNetwork.params.activation
    - estimators.CnnNetwork.params.batch_size
    - estimators.CnnNetwork.params.epochs
    # metrics:
    # - report/scores.json:
    #     cache: false
    # - report/params.json:
    #     cache: false
    # outs:
    # - saved_models/full_mnist_model.h5

    # log_production_model:
    # cmd: python src/log_production_model.py --config=params.yaml
    # deps:
    # - src/log_production_model.py